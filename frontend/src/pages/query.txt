// POST endpoint to save expense data
router.post("/create", async (req, res) => {
  try {
    // Assuming req.body contains the data you want to save
    const expenseData = new Expense(req.body);
    const savedExpense = await expenseData.save();
    res.status(201).json(savedExpense);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

This is my endpoint which posts data in my Expense Model

{
  "Commission": {
    "Seller": {
      "Gandum": {
        "Formula": 1,
        "Info": "% of total amount"
      },
      "Kapaas": {
        "Formula": 1,
        "Info": "% of total amount"
      },
      "Sarson": {
        "Formula": 2.5,
        "Info": "% of total amount"
      },
      "Mirch": {
        "Formula": 5,
        "Info": "% of total amount"
      },
      "Moonji": {
        "Formula": 3,
        "Info": "% of total amount"
      },
      "Others": {
        "Formula": 3,
        "Info": "% of total amount"
      }
    },
    "Buyer": {
      "Gandum": {
        "Formula": 0.5,
        "Info": "% of total amount"
      },
      "Kapaas": {
        "Formula": 1,
        "Info": "% of total amount"
      },
      "Others": {
        "Formula": 1.5,
        "Info": "% of total amount"
      }
    }
  },
  "Mazduri": {
    "Seller": {
      "Gandum": {
        "Formula": {
          "CompleteBag": 20,
          "IncompleteBag": 12
        },
        "Info": ""
      },
      "Kapaas": {
        "Formula": {
          "PerMand": 17
        },
        "Info": ""
      },
      "Sarson": {
        "Formula": {
          "CompleteBag": 20,
          "IncompleteBag": 12
        },
        "Info": ""
      },
      "Mirch": {
        "Formula": {
          "PerKg": 2
        },
        "Info": ""
      },
      "Moonji": {
        "Formula": {
          "CompleteBag": 15
        },
        "Info": ""
      },
      "Others": {
        "Formula": {
          "CompleteBag": 20,
          "IncompleteBag": 12
        },
        "Info": ""
      }
    },
    "Buyer": {
      "Gandum": {
        "Formula": {
          "CompleteBag": 10,
          "IncompleteBag": 6
        },
        "Info": ""
      },
      "Kapaas": {
        "Formula": {
          "PerMand": 3
        },
        "Info": ""
      },
      "Others": {
        "Formula": {
          "CompleteBagMember": 4,
          "CompleteBagNonMember": 5
        },
        "Info": ""
      }
    }
  },
  "Brokery": {
    "Seller": {
      "Gandum": {
        "Formula": 0.16,
        "Info": "% of total amount"
      },
      "Kapaas": {
        "Formula": 0.16,
        "Info": "% of total amount"
      },
      "Sarson": {
        "Formula": 0.14,
        "Info": "% of total amount"
      },
      "Mirch": {
        "Formula": 0.14,
        "Info": "% of total amount"
      },
      "Moonji": {
        "Formula": 0.14,
        "Info": "% of total amount"
      },
      "Others": {
        "Formula": 0.14,
        "Info": "% of total amount"
      }
    },
    "Buyer": null
  },
  "Market Fee": {
    "Buyer": {
      "Gandum": {
        "Formula": 2,
        "Info": "per Quintal (only for non-member)"
      },
      "Kapaas": {
        "Formula": 2,
        "Info": "per Quintal (only for non-member)"
      },
      "Others": {
        "Formula": 2,
        "Info": "per Quintal (only for non-member)"
      }
    },
    "Seller": null
  },
  "Sootli": {
    "Buyer": {
      "Gandum": {
        "Formula": {
          "CompleteBag": 4,
          "IncompleteBag": 2
        },
        "Info": ""
      },
      "Others": {
        "Formula": {
          "CompleteBag": 4,
          "IncompleteBag": 2
        },
        "Info": ""
      },
      "Kapaas": {
        "Formula": null,
        "Info": "Not Applicable"
      }
    },
    "Seller": null
  },
  "Ghisai": {
    "Buyer": {
      "Kapaas": {
        "Formula": {
          "PerMand": 4
        },
        "Info": ""
      },
      "Gandum": {
        "Formula": null,
        "Info": "Not Applicable"
      },
      "Others": {
        "Formula": null,
        "Info": "Not Applicable"
      }
    },
    "Seller": null
  },
}

This is my data which is posted.
 Now suppose i have made some changes in this data and want to update it. Please write endpoint to update the data
 Note: My Expense collection has only one document. hence, update the data at first document