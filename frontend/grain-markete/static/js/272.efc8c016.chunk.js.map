{"version":3,"file":"static/js/272.efc8c016.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Table.js","views/dashboard/Dashboard.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js","../node_modules/@coreui/icons/src/brand/cib-facebook.ts","../node_modules/@coreui/icons/src/brand/cib-linkedin.ts","../node_modules/@coreui/icons/src/brand/cib-twitter.ts","../node_modules/@coreui/icons/src/free/cil-calendar.ts"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import React, { useContext, useEffect } from 'react'\nimport { Table } from 'react-bootstrap' // Import the Table component from react-bootstrap\nimport moment from 'moment/moment'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport contextCreator from 'src/pages/context/contextCreator'\n\nconst Dashboard = () => {\n  const context = useContext(contextCreator)\n  const { getCashDCs, cashEntries, getTimeline, timeline } = context\n\n  const timeEnd = Date.now()\n\n  const dateConverter = (startDate, timeEnd, type) => {\n    const newStartDate = new Date(startDate)\n    const newEndDate = new Date(timeEnd)\n    let result = moment(newStartDate).diff(newEndDate, type)\n    return result\n  }\n\n  const timeMaker = (startDate) => {\n    const years = dateConverter(startDate, timeEnd, 'years')\n    const month = dateConverter(startDate, timeEnd, 'months')\n    const days = dateConverter(startDate, timeEnd, 'days')\n    const hours = dateConverter(startDate, timeEnd, 'hours')\n    const minutes = dateConverter(startDate, timeEnd, 'minutes')\n    if (years !== 0) {\n      return Math.abs(years) + ' سال پہلے'\n    } else if (month !== 0) {\n      return Math.abs(month) + ' مہینے پہلے'\n    } else if (days !== 0) {\n      return Math.abs(days) + ' دن پہلے'\n    } else if (hours !== 0) {\n      return Math.abs(hours) + ' گھنٹے پہلے'\n    } else if (minutes !== 0) {\n      return Math.abs(minutes) + ' منٹ پہلے'\n    } else {\n      return 'ابھی ابھی'\n    }\n  }\n\n  const moneyFormatter = (amount) => {\n    if (typeof amount !== 'number' || isNaN(amount)) {\n      return 'Invalid Amount'\n    }\n\n    // Ensure the amount is positive\n    const absoluteAmount = Math.abs(amount)\n\n    // Format the absolute amount as Pakistani currency\n    const formattedAmount = absoluteAmount.toLocaleString('en-PK', {\n      style: 'decimal',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2,\n    })\n\n    return formattedAmount\n  }\n\n  // // Fetch Cash Debit Credit detail when the component mounts\n  // useEffect(() => {\n  //   const fetchCashDCs = async () => {\n  //     try {\n  //       const response = await getCashDCs('')\n  //     } catch (error) {\n  //       //\n  //     }\n  //   }\n\n  //   fetchCashDCs()\n  // }, [getCashDCs])\n\n  // Fetch Timeline detail when the component mounts\n  useEffect(() => {\n    const fetchTimeline = async () => {\n      try {\n        const response = await getTimeline('')\n      } catch (error) {\n        //\n      }\n    }\n\n    fetchTimeline()\n  }, [getTimeline])\n\n  // Initialize an empty array for table data\n  const tableExample = []\n\n  // Filter the timeline array to exclude specified names\n  const filteredTimeline = timeline.filter((item) => {\n    return !(\n      item.name === 'Comission' ||\n      item.name === 'Mazduri' ||\n      item.name === 'Brokery' ||\n      item.name === 'Accountant' ||\n      item.name === 'Sootli' ||\n      item.name === 'Ghisai' ||\n      item.name === 'Markete_Fee'\n    )\n  })\n\n  // Map through the filtered timeline and populate table data based on conditions\n  filteredTimeline.forEach((item) => {\n    const tableEntry = {\n      entryType: '',\n      customerName: '',\n      otherDetails: '',\n      payment: '',\n      activity: timeMaker(item.date), // Set activity to the date from the timeline\n\n      // Check the collectionName to determine the entry type\n      // and populate other fields accordingly\n    }\n\n    if (item.collectionName === 'Accounts') {\n      tableEntry.entryType = 'نیا اکاؤنٹ بنایا گیا'\n      tableEntry.customerName = item.name\n      tableEntry.otherDetails = item.status\n    } else if (item.collectionName === 'CashDebitCredit') {\n      tableEntry.entryType =\n        item.transactionType === 'Take Out' ? 'پیسے نکلوائے' : 'پیسے جمع کروائے'\n      tableEntry.customerName = item.customer + ' کو دئے'\n      tableEntry.payment = moneyFormatter(item.amount)\n    } else if (item.collectionName === 'CashPoints') {\n      tableEntry.entryType = 'نیا کیش پوائنٹ بنایا گیا'\n      tableEntry.payment = item.balance\n    } else if (item.collectionName === 'Dc') {\n      if (item.entryType === 'Invoice') {\n        tableEntry.entryType = 'Invoice'\n      } else {\n        tableEntry.entryType = item.DbCr === 'Debit' ? 'پیسے نام لگے' : 'پیسے جمع لگے'\n        tableEntry.customerName = item.name\n        tableEntry.payment = moneyFormatter(item.amount)\n      }\n    } else if (item.collectionName === 'Stock') {\n      if (item.entryType === 'Invoice') {\n        tableEntry.entryType = 'Invoice'\n      } else {\n        tableEntry.entryType = item.inout === 'In' ? 'اسٹاک خریدا' : 'اسٹاک بیچا'\n        tableEntry.payment = `${item.quantity} Kilogram`\n      }\n    }\n\n    // Add the table entry to the tableExample array\n    tableExample.push(tableEntry)\n  })\n\n  return (\n    <>\n      <WidgetsDropdown />\n      {/* <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Cash flow\n              </h4>\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n              datasets: [\n                {\n                  label: 'My First dataset',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                  fill: true,\n                },\n                {\n                  label: 'My Second dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                },\n                {\n                  label: 'My Third dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-danger'),\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\n                  borderWidth: 1,\n                  borderDash: [8, 5],\n                  data: [65, 65, 65, 65, 65, 65, 65],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard> */}\n\n      {/* <WidgetsBrand withCharts /> */}\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>آج کی ٹائم لائن</CCardHeader>\n            <CCardBody>\n              {/* <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow> */}\n\n              <br />\n              <Table striped bordered hover responsive>\n                <thead>\n                  <tr>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {tableExample\n                    .slice() // Create a shallow copy of the array to avoid modifying the original\n                    .reverse() // Reverse the array\n                    .map((item, index) => (\n                      <tr key={index}>\n                        <td>{item.entryType}</td>\n                        <td>{item.customerName}</td>\n                        <td>{item.otherDetails}</td>\n                        <td>{item.payment}</td>\n                        <td>{item.activity}</td>\n                      </tr>\n                    ))}\n                </tbody>\n              </Table>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          color=\"warning\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'events', value: '12+' },\n            { title: 'meetings', value: '4' },\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React, { useContext } from 'react'\nimport CIcon from '@coreui/icons-react'\nimport './scrollbar.css'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport contextCreator from 'src/pages/context/contextCreator'\nimport { useState, useEffect } from 'react'\nimport { FaCircle } from 'react-icons/fa'\n\nconst WidgetsDropdown = () => {\n  const context = useContext(contextCreator)\n  const { accountsBlock, dashboardAccounts, getStocks, stock, getCashPoints, cashPoints } = context\n  // Define showBalance state variable and setShowBalance state updater function\n  const [showBalance, setShowBalance] = useState(null)\n\n  // Fetch Accounts detail when the component mounts\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      try {\n        const response = await accountsBlock()\n      } catch (error) {\n        //\n      }\n    }\n\n    fetchAccounts()\n  }, [accountsBlock])\n\n  // Fetch Stock detail when the component mounts\n  useEffect(() => {\n    const fetchStock = async () => {\n      try {\n        const response = await getStocks()\n      } catch (error) {\n        //\n      }\n    }\n\n    fetchStock()\n  }, [getStocks])\n\n  // Fetch Cash Points detail when the component mounts\n  useEffect(() => {\n    const fetchCashPoints = async () => {\n      try {\n        const response = await getCashPoints()\n      } catch (error) {\n        //\n      }\n    }\n\n    fetchCashPoints()\n  }, [getStocks])\n\n  const moneyFormatter = (amount) => {\n    if (typeof amount !== 'number' || isNaN(amount)) {\n      return 'Invalid Amount'\n    }\n\n    // Ensure the amount is positive\n    const absoluteAmount = Math.abs(amount)\n\n    // Format the absolute amount as Pakistani currency\n    const formattedAmount = absoluteAmount.toLocaleString('en-PK', {\n      style: 'decimal',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2,\n    })\n\n    return formattedAmount\n  }\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3} className=\"d-flex flex-column\">\n        <div className=\"widget-container\">\n          <CWidgetStatsA\n            className=\"mb-4\"\n            color=\"primary\"\n            style={{ height: '200px', overflow: 'auto' }}\n            value={\n              <>\n                اکاؤنٹس\n                <span className=\"fs-6 fw-normal\"> ({dashboardAccounts.totalAccounts})</span>\n                <br />\n                <FaCircle style={{ color: 'green', fontSize: '80%' }} />\n                <span className=\"fs-6 fw-normal\"> ({dashboardAccounts.regularAccounts})</span>\n                <br />\n                <FaCircle style={{ color: 'yellow', fontSize: '80%' }} />\n                <span className=\"fs-6 fw-normal\"> ({dashboardAccounts.highRiskAccounts})</span>\n                <br />\n                <FaCircle style={{ color: 'red', fontSize: '80%' }} />\n                <span className=\"fs-6 fw-normal\"> ({dashboardAccounts.blackListedAccounts})</span>\n              </>\n            }\n            title=\"\"\n            action={\n              <CDropdown alignment=\"end\">\n                <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                  <CIcon icon=\"cilOptions\" className=\"text-high-emphasis-inverse\" />\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem>Action</CDropdownItem>\n                  <CDropdownItem>Another action</CDropdownItem>\n                  <CDropdownItem>Something else here...</CDropdownItem>\n                  <CDropdownItem disabled>Disabled action</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            }\n          />\n        </div>\n      </CCol>\n      <CCol sm={6} lg={3} className=\"d-flex flex-column\">\n        <div className=\"widget-container\">\n          <CWidgetStatsA\n            className=\"mb-4\"\n            color=\"info\"\n            style={{ height: '200px', overflow: 'auto' }}\n            value={\n              <>\n                اسٹاک\n                <span className=\"fs-6 fw-normal\">\n                  {stock.map((item, index) => (\n                    <div key={index}>\n                      <div className=\"d-flex justify-content-between\">\n                        <span style={{ float: 'left' }}>{item.quantity}</span>\n                        <span className=\"mx-3\" style={{ float: 'right' }}>\n                          {item.crop === 'Select Crop'\n                            ? 'کوئی ایک چنیں'\n                            : item.crop === 'Gandum'\n                            ? 'گندم'\n                            : item.crop === 'Kapaas'\n                            ? 'کپاس'\n                            : item.crop === 'Sarson'\n                            ? 'سرسوں'\n                            : item.crop === 'Mirch'\n                            ? 'مرچ'\n                            : item.crop === 'Moonji'\n                            ? 'مونجھی'\n                            : item.crop === 'Deegar'\n                            ? `دیگر (${item.crop})`\n                            : item.crop}\n                        </span>\n                      </div>\n                      <hr /> {/* Horizontal line */}\n                    </div>\n                  ))}\n                </span>\n              </>\n            }\n            action={\n              <CDropdown alignment=\"end\">\n                <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                  <CIcon icon=\"cilOptions\" className=\"text-high-emphasis-inverse\" />\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem>Action</CDropdownItem>\n                  <CDropdownItem>Another action</CDropdownItem>\n                  <CDropdownItem>Something else here...</CDropdownItem>\n                  <CDropdownItem disabled>Disabled action</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            }\n          />\n        </div>\n      </CCol>\n      <CCol sm={6} lg={3} className=\"d-flex flex-column\">\n        <div className=\"widget-container\">\n          <CWidgetStatsA\n            className=\"mb-4\"\n            color=\"warning\"\n            style={{ height: '200px', overflow: 'auto' }}\n            value={\n              <>\n                کیش پوائنٹس\n                <span className=\"fs-6 fw-normal\">\n                  {cashPoints.map((cashPoint, index) => (\n                    <div key={index}>\n                      <div className=\"float-start\">{cashPoint.name}</div>\n                      <br />\n                      <div\n                        className=\"\"\n                        onClick={(e) => {\n                          e.preventDefault()\n                          e.stopPropagation()\n                        }}\n                        onMouseDown={() => {\n                          // Show the balance when mouse is pressed\n                          setShowBalance(index)\n                        }}\n                        onMouseUp={() => {\n                          // Hide the balance when mouse is released\n                          setShowBalance(null)\n                        }}\n                        onMouseLeave={() => {\n                          // Hide the balance when mouse leaves the element\n                          setShowBalance(null)\n                        }}\n                      >\n                        {showBalance === index ? 'Rs ' + moneyFormatter(cashPoint.balance) : '***'}\n                      </div>\n                      <div className=\"clearfix\"></div>\n                      {index < cashPoints.length - 1 && <hr />}\n                    </div>\n                  ))}\n                </span>\n              </>\n            }\n            action={\n              <CDropdown alignment=\"end\">\n                <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                  <CIcon icon=\"cilOptions\" className=\"text-high-emphasis-inverse\" />\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem>Action</CDropdownItem>\n                  <CDropdownItem>Another action</CDropdownItem>\n                  <CDropdownItem>Something else here...</CDropdownItem>\n                  <CDropdownItem disabled>Disabled action</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            }\n          />\n        </div>\n      </CCol>\n      <CCol sm={6} lg={3} className=\"d-flex flex-column\">\n        <div className=\"widget-container\">\n          <CWidgetStatsA\n            className=\"mb-4\"\n            color=\"danger\"\n            style={{ height: '200px', overflow: 'auto' }}\n            value={\n              <>\n                {/* 44K{' '}\n                <span className=\"fs-6 fw-normal\">\n                  (-23.6% <CIcon icon=\"cilArrowBottom\" />)\n                </span> */}\n              </>\n            }\n            action={\n              <CDropdown alignment=\"end\">\n                <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                  <CIcon icon=\"cilOptions\" className=\"text-high-emphasis-inverse\" />\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem>Action</CDropdownItem>\n                  <CDropdownItem>Another action</CDropdownItem>\n                  <CDropdownItem>Something else here...</CDropdownItem>\n                  <CDropdownItem disabled>Disabled action</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            }\n          />\n        </div>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","export var cibFacebook = [\"32 32\", \"<path d='M32 16c0-8.839-7.167-16-16-16-8.839 0-16 7.161-16 16 0 7.984 5.849 14.604 13.5 15.803v-11.177h-4.063v-4.625h4.063v-3.527c0-4.009 2.385-6.223 6.041-6.223 1.751 0 3.584 0.312 3.584 0.312v3.937h-2.021c-1.984 0-2.604 1.235-2.604 2.5v3h4.437l-0.713 4.625h-3.724v11.177c7.645-1.199 13.5-7.819 13.5-15.803z'/>\"];\n","export var cibLinkedin = [\"32 32\", \"<path d='M27.26 27.271h-4.733v-7.427c0-1.771-0.037-4.047-2.475-4.047-2.468 0-2.844 1.921-2.844 3.916v7.557h-4.739v-15.271h4.552v2.083h0.061c0.636-1.203 2.183-2.468 4.491-2.468 4.801 0 5.692 3.161 5.692 7.271v8.385zM7.115 9.912c-1.527 0-2.751-1.235-2.751-2.756 0-1.516 1.229-2.749 2.751-2.749s2.755 1.233 2.755 2.749c0 1.521-1.233 2.756-2.755 2.756zM9.489 27.271h-4.749v-15.271h4.749zM29.636 0h-27.276c-1.303 0-2.36 1.031-2.36 2.307v27.387c0 1.276 1.057 2.307 2.36 2.307h27.271c1.301 0 2.369-1.031 2.369-2.307v-27.387c0-1.276-1.068-2.307-2.369-2.307z'/>\"];\n","export var cibTwitter = [\"32 32\", \"<path d='M31.937 6.093c-1.177 0.516-2.437 0.871-3.765 1.032 1.355-0.813 2.391-2.099 2.885-3.631-1.271 0.74-2.677 1.276-4.172 1.579-1.192-1.276-2.896-2.079-4.787-2.079-3.625 0-6.563 2.937-6.563 6.557 0 0.521 0.063 1.021 0.172 1.495-5.453-0.255-10.287-2.875-13.52-6.833-0.568 0.964-0.891 2.084-0.891 3.303 0 2.281 1.161 4.281 2.916 5.457-1.073-0.031-2.083-0.328-2.968-0.817v0.079c0 3.181 2.26 5.833 5.26 6.437-0.547 0.145-1.131 0.229-1.724 0.229-0.421 0-0.823-0.041-1.224-0.115 0.844 2.604 3.26 4.5 6.14 4.557-2.239 1.755-5.077 2.801-8.135 2.801-0.521 0-1.041-0.025-1.563-0.088 2.917 1.86 6.36 2.948 10.079 2.948 12.067 0 18.661-9.995 18.661-18.651 0-0.276 0-0.557-0.021-0.839 1.287-0.917 2.401-2.079 3.281-3.396z'/>\"];\n","export var cilCalendar = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M472,96H384V40H352V96H160V40H128V96H40a24.028,24.028,0,0,0-24,24V456a24.028,24.028,0,0,0,24,24H472a24.028,24.028,0,0,0,24-24V120A24.028,24.028,0,0,0,472,96Zm-8,352H48V128h80v40h32V128H352v40h32V128h80Z' class='ci-primary'/><rect width='32' height='32' x='112' y='224' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='200' y='224' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='280' y='224' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='368' y='224' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='112' y='296' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='200' y='296' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='280' y='296' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='368' y='296' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='112' y='368' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='200' y='368' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='280' y='368' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='368' y='368' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/>\"];\n"],"names":["React","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","_jsx","_objectSpread","responsiveClass","children","context","useContext","contextCreator","getTimeline","getCashDCs","cashEntries","timeline","timeEnd","Date","now","dateConverter","startDate","type","newStartDate","newEndDate","moment","diff","timeMaker","years","month","days","hours","minutes","Math","abs","moneyFormatter","amount","isNaN","toLocaleString","style","minimumFractionDigits","maximumFractionDigits","useEffect","fetchTimeline","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","t0","stop","apply","arguments","tableExample","filter","item","name","forEach","tableEntry","entryType","customerName","otherDetails","payment","activity","date","collectionName","status","transactionType","customer","balance","DbCr","inout","quantity","push","_jsxs","_Fragment","WidgetsDropdown","CRow","CCol","xs","CCard","CCardHeader","CCardBody","Table","slice","reverse","map","index","withCharts","chartOptions","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","maintainAspectRatio","plugins","legend","display","scales","x","y","sm","lg","CWidgetStatsD","chart","CChart","data","labels","datasets","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","fill","options","icon","CIcon","cibFacebook","height","values","title","value","cibTwitter","cibLinkedin","color","cilCalendar","accountsBlock","dashboardAccounts","getStocks","stock","getCashPoints","cashPoints","_useState","useState","_useState2","_slicedToArray","showBalance","setShowBalance","fetchAccounts","fetchStock","_ref2","_callee2","_context2","fetchCashPoints","_ref3","_callee3","_context3","CWidgetStatsA","overflow","totalAccounts","FaCircle","fontSize","regularAccounts","highRiskAccounts","blackListedAccounts","action","CDropdown","alignment","CDropdownToggle","caret","CDropdownMenu","CDropdownItem","disabled","float","crop","cashPoint","onClick","e","preventDefault","stopPropagation","onMouseDown","onMouseUp","onMouseLeave","length"],"sourceRoot":""}